
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // School configuration collection for real-time updates
    match /school/{docId} {
      // Allow public read access for the website
      allow read: if true;
      
      // Allow write access only for approved admins
      allow write: if request.auth != null && isApprovedAdmin();
    }
    
    // Admin collection rules
    match /admins/{adminId} {
      // Allow creation of pending admin requests without authentication
      allow create: if isValidPendingAdminData(request.resource.data);
      
      // Allow reading for authenticated users only
      allow read: if request.auth != null;
      
      // Allow updates and deletions only by approved admins
      allow update, delete: if request.auth != null && isApprovedAdmin();
    }
    
    // Helper functions for validation
    function isValidPendingAdminData(data) {
      return data.keys().hasAll(['firstName', 'lastName', 'email', 'phone', 'password', 'status', 'requestedAt']) &&
             data.firstName is string && data.firstName.size() > 0 && data.firstName.size() <= 50 &&
             data.lastName is string && data.lastName.size() > 0 && data.lastName.size() <= 50 &&
             data.email is string && isValidEmail(data.email) && data.email.size() <= 100 &&
             data.phone is string && data.phone.size() > 0 && data.phone.size() <= 15 &&
             data.password is string && data.password.size() >= 8 &&
             data.status == 'pending' &&
             data.requestedAt is string;
    }
    
    function isValidEmail(email) {
      return email.matches('^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$') &&
             email.size() >= 5 &&
             email.size() <= 100;
    }
    
    function isApprovedAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/admins/$(request.auth.uid)).data.status == 'approved';
    }
    
    // Default deny rule for all other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
